@startuml ERD for Database
' hide circle

skinparam linetype ortho

!define PK <&key>
!define FK <&link-intact>

entity Movie {
    PK M_ID: int
    --
    M_WATCHMODE_ID: int
    M_IMDB: string
    M_TMDB: int
    M_TITLE: string
    M_PLOT: string
    M_RUNTIME: int
    M_VIEWER_RATING: float (1 decimal) (0..10)
    M_RELEASE_YEAR: int
    FK CR_ID: int
}

entity ContentRating {
    PK CR_ID: int
    --
    CR_RATING: string
}

entity GenresTypes {
    PK GT_ID: int
    --
    GT_NAME: string
}

entity MovieGenres {
    PK FK M_ID: int
    PK FK GT_ID: int
}

entity Actors {
    PK A_ID: int
    --
    A_NAME: string
}

entity MovieActors {
    PK FK M_ID: int
    PK FK A_ID: int
}

entity Directors {
    PK D_ID: int
    --
    D_NAME: string
}

entity MovieDirectors {
    PK FK M_ID: int
    PK FK D_ID: int
}

entity Countries {
    PK C_ID: int
    --
    C_NAME: string
    C_CODE: CHAR(2)
}

entity MovieCountries {
    PK FK M_ID: int
    PK FK C_ID: int
}

entity Languages {
    PK L_ID: int
    --
    L_NAME: string
    L_CODE: CHAR(2)
}

entity MovieLanguages {
    PK FK M_ID: int
    PK FK L_ID: int
}

entity Keywords {
    PK K_ID: int
    --
    FK M_ID: int
    K_KEYWORD: string
}

entity AKA {
    PK AKA_ID: int
    --
    FK M_ID: int
    AKA_NAME: string
}

entity Review {
    PK R_ID: int
    --
    FK M_ID: int
    R_AUTHOR: string
    R_NAME: string
    R_RATING: int
    R_REVIEW: string
    R_DATE: date
}


Movie ||-up-|| ContentRating: has
Movie ||-up-|{ Keywords: has
Movie ||-up-|| AKA: has
Movie ||-left-|{ MovieGenres: has
Movie ||--|{ MovieActors: has
Movie ||--|{ MovieDirectors: has
Movie ||-down-|{ MovieCountries: has
Movie ||-right-|{ MovieLanguages: has
Movie ||--|{ Review: has

MovieGenres }|-left-|| GenresTypes
Actors }|-|| MovieActors
Directors ||-up-|{ MovieDirectors
Countries ||-up-|{ MovieCountries
Languages ||--|{ MovieLanguages
@enduml