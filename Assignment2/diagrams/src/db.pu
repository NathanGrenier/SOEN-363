@startuml ERD for Database
' hide circle

skinparam linetype ortho

!define PK <&key>
!define FK <&link-intact>

entity Movie {
    PK M_ID: int
    --
    M_WATCHMODE_ID: int
    M_IMDB: string
    M_TMDB: int
    M_TITLE: string
    M_PLOT: string
    M_RUNTIME: int
    M_VIEWER_RATING: float (1 decimal) (0..10)
    M_RELEASE_YEAR: int
    M_REVIEW_COUNT: int
    FK CR_ID: int
}

entity ContentRating {
    PK CR_ID: int
    --
    CR_RATING: string
}

entity GenresType {
    PK GT_ID: int
    --
    GT_TYPE: string
}

entity MovieGenre {
    PK FK M_ID: int
    PK FK GT_ID: int
}

entity Actor {
    PK A_ID: int
    --
    A_NAME: string
}

entity MovieActor {
    PK FK M_ID: int
    PK FK A_ID: int
}

entity Director {
    PK D_ID: int
    --
    D_NAME: string
}

entity MovieDirector {
    PK FK M_ID: int
    PK FK D_ID: int
}

entity Country {
    PK C_ID: int
    --
    C_NAME: string
    C_CODE: CHAR(2)
}

entity MovieCountry {
    PK FK M_ID: int
    PK FK C_ID: int
}

entity Language {
    PK L_ID: int
    --
    L_NAME: string
    L_CODE: CHAR(2)
}

entity MovieLanguage {
    PK FK M_ID: int
    PK FK L_ID: int
}

entity Keyword {
    PK K_ID: int
    --
    FK M_ID: int
    K_KEYWORD: string
}

entity AKA {
    PK AKA_ID: int
    --
    FK M_ID: int
    AKA_TITLE: string
}


Movie ||-up-|| ContentRating: has
Movie ||-up-|{ Keyword: has
Movie ||-up-|| AKA: has
Movie ||-left-|{ MovieGenre: has
Movie ||--|{ MovieActor: has
Movie ||--|{ MovieDirector: has
Movie ||-down-|{ MovieCountry: has
Movie ||-right-|{ MovieLanguage: has

MovieGenre }|-left-|| GenresType
Actor }|-|| MovieActor
Director ||-up-|{ MovieDirector
Country ||-up-|{ MovieCountry
Language ||--|{ MovieLanguage
@enduml